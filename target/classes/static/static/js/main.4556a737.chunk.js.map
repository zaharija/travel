{"version":3,"sources":["logo.svg","apartmani-one.png","apartmani-two.png","apartmani-three.png","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","App","Container","className","Navbar","variant","sticky","fixed","align","Brand","href","Dropdown","Toggle","id","Menu","Item","src","logo","alt","class","image1","height","width","image2","image3","Table","striped","bordered","hover","dark","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,6QCgG5BC,EAxFI,WACjB,OAAO,oCACL,kBAACC,EAAA,EAAD,CAAWC,UAAU,iBAChB,kBAACC,EAAA,EAAD,CAAQD,UAAU,kCAAkCE,QAAQ,OAAOC,OAAO,MAAMC,MAAM,MAAMC,MAAM,QAC/F,kBAACN,EAAA,EAAD,KACI,kBAACE,EAAA,EAAOK,MAAR,CAAcC,KAAK,KAAnB,WACA,kBAACN,EAAA,EAAOK,MAAR,CAAcC,KAAK,4CAAnB,gBACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBP,QAAQ,UAAUQ,GAAG,kBAAtC,QAIA,kBAACF,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAeL,KAAK,uEAApB,YACA,kBAACC,EAAA,EAASI,KAAV,CAAeL,KAAK,0BAApB,WACA,kBAACC,EAAA,EAASI,KAAV,CAAeL,KAAK,0DAApB,cAKZ,kBAACR,EAAA,EAAD,CAAWC,UAAU,OACnB,4BAAQA,UAAU,cAEhB,yBAAKa,IAAKC,IAAMd,UAAU,WAAWe,IAAI,SAEzC,wBAAIf,UAAU,UAAd,mBACkB,6BADlB,eAGA,yBAAKgB,MAAM,gBACT,qEACA,oEACA,8EACA,sGACA,0HACA,wGACA,qFAIN,kBAACjB,EAAA,EAAD,CAAWC,UAAU,WAClB,4BAAQA,UAAU,kBACf,wBAAIA,UAAU,aAAd,qCACA,yBAAKgB,MAAM,aACX,yBAAKH,IAAKI,IAAQC,OAAO,QAAQC,MAAM,WAEvC,yBAAKH,MAAM,cACV,yBAAKH,IAAKO,IAAQF,OAAO,QAAQC,MAAM,WAExC,yBAAKH,MAAM,aACV,yBAAKH,IAAKQ,IAAQH,OAAO,QAAQC,MAAM,aAI9C,kBAACpB,EAAA,EAAD,CAAWC,UAAU,aACnB,kBAACsB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,MAAI,GAChC,8BACE,4BACE,0CACA,iCACA,yCAEF,4BACE,0CACA,iCACA,yCAEF,4BACE,0CACA,iCACE,0CAEJ,4BACE,qCACA,iCACA,yCAEF,4BACE,sCACA,iCACA,+C,MC3EIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4556a737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/apartmani-one.b122349b.png\";","module.exports = __webpack_public_path__ + \"static/media/apartmani-two.abc64f65.png\";","module.exports = __webpack_public_path__ + \"static/media/apartmani-three.e673d63c.png\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Container, Table, Navbar, Dropdown } from 'react-bootstrap';\r\nimport image1 from './apartmani-one.png'\r\nimport image2 from './apartmani-two.png'\r\nimport image3 from './apartmani-three.png'\r\n\r\nexport const App = () => {\r\n  return <>\r\n    <Container className=\"mainContainer\">\r\n         <Navbar className=\"bg-dark justify-content-between\" variant=\"dark\" sticky=\"top\" fixed=\"top\" align=\"left\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#\" >Pocetna</Navbar.Brand>\r\n                <Navbar.Brand href=\"https://en.wikipedia.org/wiki/Crikvenica\" >O Crikvenici</Navbar.Brand>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\r\n                    Meni\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"https://duckduckgo.com/?q=apartmani+crikvenica&iax=images&ia=images\">Galerija</Dropdown.Item>\r\n                    <Dropdown.Item href=\"https://temp-mail.org/\">Kontakt</Dropdown.Item>\r\n                    <Dropdown.Item href=\"https://www.njuskalo.hr/iznajmljivanje-kuca/crikvenica\">Ponuda</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Container>\r\n        </Navbar>\r\n        <Container className=\"App\">\r\n          <header className=\"App-header\">\r\n\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n            <h1 className=\"App-h1\">\r\n              Najam Apartmana <br></br> Crikvenica\r\n            </h1>\r\n            <div class=\"main-content\">\r\n              <p>Dobrodošli na našu stranicu!</p>\r\n              <p>Ovdje možete saznati sve o najmu</p>\r\n              <p>i ponudi apartmana na području Crikvenice!</p>\r\n              <p>Ukoliko vas zanima provod ili odmor u Crikvenici, na pravom ste mjestu!</p>\r\n              <p>Imamo najveći izbor apartmana na širem području Rijeke, a osobito Crikvenice</p>\r\n              <p>i imamo izbor za sve ukuse, od obiteljskih apartmana u uskom centru grada</p>\r\n              <p>pa do apartmana najviše klase van buke centra.</p>\r\n            </div>\r\n          </header>\r\n        </Container>\r\n        <Container className=\"App-two\">\r\n           <header className=\"App-header-two\">\r\n              <h1 className=\"h1-second\">Best of what Crikvenica can offer</h1>\r\n              <div class=\"first-img\">\r\n              <img src={image1} height=\"150px\" width=\"200px\"/>\r\n              </div>\r\n              <div class=\"second-img\">\r\n               <img src={image2} height=\"150px\" width=\"200px\"/>\r\n              </div>\r\n              <div class=\"third-img\">\r\n               <img src={image3} height=\"150px\" width=\"200px\"/>\r\n              </div>\r\n          </header>\r\n        </Container>\r\n        <Container className=\"App-three\">\r\n          <Table striped bordered hover dark>\r\n            <body>\r\n              <tr>\r\n                <td>Crikvenica</td>\r\n                <td>2</td>\r\n                <td>50€</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Crikvenica</td>\r\n                <td>2</td>\r\n                <td>40€</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Crikvenica</td>\r\n                <td>3</td>\r\n                  <td>100€</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Bakar</td>\r\n                <td>2</td>\r\n                <td>40€</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Rijeka</td>\r\n                <td>2</td>\r\n                <td>50€</td>\r\n              </tr>\r\n            </body>\r\n          </Table>\r\n        </Container>\r\n    </Container>\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}